{"version":3,"sources":["components/ImageDiv/index.js","components/Wrapper/index.js","components/Title/index.js","components/Count/index.js","components/Wins/index.js","App.js","index.js"],"names":["FriendCard","props","className","alt","name","src","image","onClick","event","checkImg","id","shuffleArr","Wrapper","children","Title","Count","count","Wins","wins","App","state","imgs","ids","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","setState","includes","console","log","divStyle","background","paddingTop","style","this","map","ImageDiv","key","Component","ReactDOM","render","document","getElementById"],"mappings":"03BAceA,MAXf,SAAoBC,GAClB,OAEM,yBAAKC,UAAU,gBAAgBC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,QAAS,SAASC,GAAQP,EAAMQ,SAASR,EAAMS,IAAKT,EAAMU,iB,MCCrHC,MAJf,SAAiBX,GACf,OAAO,yBAAKC,UAAU,WAAWD,EAAMY,W,MCG1BC,MAJf,SAAeb,GACb,OAAO,wBAAIC,UAAU,SAASD,EAAMY,W,MCGvBE,MAJf,SAAed,GACb,OAAO,wBAAIC,UAAU,SAAd,mBAAuCD,EAAMe,MAA7C,O,MCGMC,MAJf,SAAchB,GACZ,OAAO,wBAAIC,UAAU,QAAd,SAA4BD,EAAMiB,O,OCmG5BC,E,2MA7FbC,MAAQ,CACNC,OACAC,IAAK,GACLN,MAAO,EACPE,KAAM,G,EAIRP,WAAa,WAIX,IAHA,IAA2CY,EAAgBC,EAAvDC,EAAe,EAAKL,MAAMC,KAAKK,OAG5B,IAAMD,GAGXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GACzCA,GAAgB,EAGhBF,EAAiB,EAAKH,MAAMC,KAAKI,GACjC,EAAKL,MAAMC,KAAKI,GAAgB,EAAKL,MAAMC,KAAKG,GAChD,EAAKJ,MAAMC,KAAKG,GAAeD,EAGjC,EAAKO,SAAS,CAACT,KAAM,EAAKD,MAAMC,Q,EAGlCZ,SAAW,SAAAC,GAKL,EAAKU,MAAMJ,OAAS,GACtB,EAAKc,SAAS,CAAEZ,KAAM,EAAKE,MAAMF,KAAO,IACxC,EAAKY,SAAS,CAAEd,MAAO,IACvB,EAAKc,SAAS,CAAER,IAAK,MAGb,EAAKF,MAAME,IAAIS,SAASrB,IAKhC,EAAKoB,SAAS,CAAEd,MAAO,IACvB,EAAKc,SAAS,CAAER,IAAK,OALrB,EAAKQ,SAAS,CAAER,IAAI,GAAD,mBAAM,EAAKF,MAAME,KAAjB,CAAsBZ,MACzC,EAAKoB,SAAS,CAAEd,MAAO,EAAKI,MAAMJ,MAAQ,IAC1CgB,QAAQC,IAAI,EAAKb,MAAME,O,EAO3BN,MAAQ,WAEN,EAAKc,SAAS,CAAEd,MAAO,EAAKI,MAAMJ,MAAQ,K,EAG5CkB,SAAW,CACTC,WAAY,UACZC,WAAY,Q,wEAIJ,IAAD,OACP,OACE,yBAAKC,MAAOC,KAAKJ,UACf,kBAAC,EAAD,wCACA,yBAAKhC,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACEgB,KAAMoB,KAAKlB,MAAMF,QAGrB,yBAAKhB,UAAU,SACb,kBAAC,EAAD,CACEc,MAAOsB,KAAKlB,MAAMJ,UAIxB,kBAAC,EAAD,KAEGsB,KAAKlB,MAAMC,KAAKkB,KAAI,SAAAlB,GAAI,OACvB,kBAACmB,EAAD,CACE7B,WAAY,EAAKA,WACjBF,SAAU,EAAKA,SACfC,GAAIW,EAAKX,GACT+B,IAAKpB,EAAKX,GACVN,KAAMiB,EAAKjB,KACXE,MAAOe,EAAKf,iB,GAtFRoC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.317ca20d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n      \n        <img className=\"img-container\" alt={props.name} src={props.image} onClick={function(event){ props.checkImg(props.id); props.shuffleArr()}}  />\n      \n        // onClick={() => props.checkImg(props.id)}\n        // onClick={function(event){ props.checkImg(props.id); props.shuffleArr(this.state.imgs)}}\n        \n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Count(props) {\n  return <h1 className=\"count\">Correct clicks: {props.count}/9</h1>;\n}\n\nexport default Count;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wins(props) {\n  return <h1 className=\"wins\">Wins: {props.wins}</h1>;\n}\n\nexport default Wins;\n","import React, { Component } from \"react\";\nimport ImageDiv from \"./components/ImageDiv\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Count from \"./components/Count\";\nimport Wins from \"./components/Wins\";\nimport imgs from \"./imgs.json\";\n\nclass App extends Component {\n  // Setting this.state.imgs to the imgs json arrray\n  state = {\n    imgs,\n    ids: [],\n    count: 0,\n    wins: 0\n  };\n\n  //Knuth Shuffle, found and explained on SO and refactored for my react app -> https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-this.state.imgs\n  shuffleArr = () => {\n    var currentIndex = this.state.imgs.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      \n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = this.state.imgs[currentIndex];\n      this.state.imgs[currentIndex] = this.state.imgs[randomIndex];\n      this.state.imgs[randomIndex] = temporaryValue;\n    }\n\n    this.setState({imgs: this.state.imgs})\n  }\n\n  checkImg = id => {\n    // Filter this.state.imgs for imgs with an id not equal to the id being removed\n    // const imgs = this.state.imgs.filter(imgs => imgs.id !== id);\n    // Set this.state.imgs equal to the new imgs arrray\n    // this.setState({ imgs });\n    if (this.state.count >= 9) {\n      this.setState({ wins: this.state.wins + 1 })\n      this.setState({ count: 0 })\n      this.setState({ ids: [] })\n    }\n\n    else if (!this.state.ids.includes(id)) {\n      this.setState({ ids: [...this.state.ids, id] })\n      this.setState({ count: this.state.count + 1 })\n      console.log(this.state.ids)\n    } else {\n      this.setState({ count: 0 })\n      this.setState({ ids: [] })\n    }\n  };\n\n  count = () => {\n\n    this.setState({ count: this.state.count + 1 })\n  }\n  //inline styling because my div needed a background color for Title and the wins/count, which are not wrapped in a larger component.\n  divStyle = {\n    background: \"#121212\",\n    paddingTop: \"10px\"\n  }\n\n  // Map over this.state.imgs and render a ImageDiv component for each imgs object\n  render() {\n    return (\n      <div style={this.divStyle}>\n        <Title>Don't click the same one twice!</Title>\n        <div className='row'>\n          <div className='col-6'>\n            <Wins\n              wins={this.state.wins}\n            />\n          </div>\n          <div className='col-6'>\n            <Count\n              count={this.state.count}\n            />\n          </div>\n        </div>\n        <Wrapper>\n\n          {this.state.imgs.map(imgs => (\n            <ImageDiv\n              shuffleArr={this.shuffleArr}\n              checkImg={this.checkImg}\n              id={imgs.id}\n              key={imgs.id}\n              name={imgs.name}\n              image={imgs.image}\n            />\n          ))}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}